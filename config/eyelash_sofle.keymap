#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define ZMK_HELPER_KEEP_NATIVE 0
#include "zmk-helpers/helper.h"
#include "joystick.dtsi"

#include "eyelash_sofle_keydefs.dtsi" // Extra key definitions following urob's setup

// - Defaults -

    #define DEFAULT 0
    #define NAV_TXT 1
    #define NAV_APP 2
    #define NAV_SYS 3
    #define OPTIONS 4

    #define QUICK_TAP_MS 175
    &sk {
        release-after-ms = <900>;
        quick-release;
    };
    &sl { // Allow sticky mods to chord across sticky layers.
        ignore-modifiers;
    };
    &lt {
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <QUICK_TAP_MS>;
    };
    &mt {
        flavor = "tap-preferred";
        tapping-term-ms = <220>;
        quick-tap-ms = <220>;
        hold-trigger-key-positions = <0>;
    };
    &caps_word {
        continue-list = <UNDERSCORE MINUS>;
    };

// - Layer Keys -

    // Hardcoded, on updating the keymap, the sides have to be adjusted accordingly
    #define LEFT_CHARS B Y O U Q C I E A Z
    #define LEFT_SYMBS SLASH BACKSLASH MINUS UNDERSCORE COMMA ASTERISK DOT DOUBLE_QUOTES CARET DOLLAR AMPERSAND SEMICOLON HASH AT_SIGN QUESTION PIPE EXCLAMATION PERCENT EQUAL ESCAPE
    #define RIGHT_CHARS J L D W V K H T N S X M G P F
    #define RIGHT_SYMBS TILDE COLON LEFT_BRACKET LESS_THAN SINGLE_QUOTE GRAVE PLUS LEFT_PARENTHESIS LEFT_BRACE RIGHT_BRACKET GREATER_THAN RIGHT_PARENTHESIS RIGHT_BRACE
    #define NUM_CHARS N0 N1 N2 N3 N4 N5 N6 N7 N8 N9

    ZMK_AUTO_LAYER(geaorge, continue-list = <N0 SLASH MINUS COMMA DOT>; ignore-modifiers;)

    #define ADAPTIVE_RESET 1200
    ZMK_ADAPTIVE_KEY(arcane_left, bindings = <&sk LSHFT>;
        repeat {bindings = <&key_repeat>; trigger-keys = <R LEFT_CHARS LEFT_SYMBS>; max-prior-idle-ms = <ADAPTIVE_RESET>;strict-modifiers;};)
        // TODO: Add magic behavior
    ZMK_ADAPTIVE_KEY(arcane_right, bindings = <&sk LSHFT>;  
        repeat {bindings = <&key_repeat>; trigger-keys = <RIGHT_CHARS RIGHT_SYMBS>; max-prior-idle-ms = <ADAPTIVE_RESET>;strict-modifiers;};)
        // TODO: Add magic behavior

    ZMK_MOD_MORPH(runic_left, bindings = <&arcane_left>, <&kp X> /* TODO: Will be leader key not sending out shift */; mods = <(MOD_LSFT|MOD_RSFT)>;)
    ZMK_MOD_MORPH(runic_right, bindings = <&arcane_right>, <&kp Y> /* TODO: Will be leader key not sending out shift */; mods = <(MOD_LSFT|MOD_RSFT)>;)

    #define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                              \
    ZMK_HOLD_TAP( NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";          \
                    tapping-term-ms = <200>; quick-tap-ms = <QUICK_TAP_MS>;     \
                    require-prior-idle-ms = <150>;                              \
                    hold-trigger-key-positions = <TRIGGER_POS>;                 \
                    hold-trigger-on-release;                                    \
                )

    MAKE_HRM(hml, &kp, &kp, KEYS_R LB0 KEYS_T) // Left-hand HRMs, same hand mod+key for del_bspc
    MAKE_HRM(hmr, &kp, &kp, KEYS_L KEYS_T) // Right-hand HRMs
    MAKE_HRM(hmt, &mo, &kp, KEYS_R KEYS_L KEYS_T) // Thumb HRMs
    MAKE_HRM(hmt_rune_l, &mo, &runic_left, KEYS_R KEYS_L KEYS_T) // runic HRMs
    MAKE_HRM(hmt_rune_r, &mo, &runic_right, KEYS_R KEYS_L KEYS_T) // TODO: runic HRMs

    ZMK_HOLD_TAP( test_runic, bindings = <&kp>, <&runic_right>; flavor = "balanced";
                    tapping-term-ms = <200>; quick-tap-ms = <QUICK_TAP_MS>;
                    require-prior-idle-ms = <150>;
                    hold-trigger-key-positions = <KEYS_R KEYS_L KEYS_T>;
                    hold-trigger-on-release;
                )

    #define SPC_NAV_SYS &hmt NAV_SYS SPACE
    #define RUN_NAV_APP &hmt_rune_l NAV_APP
    #define R_NAV_TXT &hmt NAV_TXT R
    #define RUN_SFT &hmt_rune_r NAV_APP
    #define NUM_WRD_SFT &num_word NAV_TXT

// - Symbols -

    // HORIZONTAL COMBOS
    #define COMBO_TERM_FAST 18
    #define COMBO_TERM_SLOW 30
    #define COMBO_IDLE_FAST 150
    #define COMBO_IDLE_SLOW 50

    ZMK_MOD_MORPH(del_bspc, bindings = <&kp DELETE>, <&kp BACKSPACE>; mods = <(MOD_LSFT|MOD_RSFT)>;)

    ZMK_COMBO(tab,    &kp TAB,    LB2 LB1,     DEFAULT, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    ZMK_COMBO(enter,  &kp ENTER,  LB3 LB2,     DEFAULT, COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    // VERTICAL COMBOS
    #define SHIFT_MORPH(NAME, BINDING1, BINDING2) \
        ZMK_MOD_MORPH(NAME, bindings = <&kp BINDING1>, <&kp BINDING2>; mods = <(MOD_LSFT|MOD_RSFT)>;)
    #define SHIFT_MORPH_COMBO(NAME, BINDING1, BINDING2, POSITION) \
        SHIFT_MORPH(NAME##_morph, BINDING1, BINDING2) \
        ZMK_COMBO(NAME, &NAME##_morph, POSITION, DEFAULT, COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    // LEFT-HAND SYMBOLS --- NOTE: WHEN UPDATING ALSO UPDATE ADAPTIVE KEYS SIDES
    SHIFT_MORPH(        slash_back,         SLASH,               BACKSLASH      )
    SHIFT_MORPH(        minus_undr,         MINUS,               UNDERSCORE     )
    SHIFT_MORPH(        comma_astr,         COMMA,               ASTERISK       )
    SHIFT_MORPH(        dot_,               DOT,                 DOT            )
    SHIFT_MORPH_COMBO(  dquotes_caret,      DOUBLE_QUOTES,       CARET,         LT3 LM3 )
    SHIFT_MORPH_COMBO(  dollar_amp,         DOLLAR,              AMPERSAND,     LT2 LM2 )
    SHIFT_MORPH_COMBO(  semicolon,          SEMICOLON,           SEMICOLON,     LT1 LM1 )
    SHIFT_MORPH_COMBO(  hash_at,            HASH,                AT_SIGN,       LT0 LM0 )
    SHIFT_MORPH_COMBO(  question_pipe,      QUESTION,            PIPE,          LM3 LB3 )
    SHIFT_MORPH_COMBO(  excl_percent,       EXCLAMATION,         PERCENT,       LM2 LB2 )
    SHIFT_MORPH_COMBO(  equal,              EQUAL,               EQUAL,         LM1 LB1 )
    SHIFT_MORPH_COMBO(  esc_,               ESCAPE,              ESCAPE,        LM0 LB0 )

    // RIGHT-HAND COMBOS
    SHIFT_MORPH_COMBO(  tilde,              TILDE,               TILDE,         RT0 RM0 )
    SHIFT_MORPH_COMBO(  colon,              COLON,               COLON,         RT1 RM1 )
    SHIFT_MORPH_COMBO(  lbrc_lt,            LEFT_BRACKET,        LESS_THAN,     RT2 RM2 )
    SHIFT_MORPH_COMBO(  squote_grave,       SINGLE_QUOTE,        GRAVE,         RT3 RM3 )
    SHIFT_MORPH_COMBO(  plus,               PLUS,                PLUS,          RM0 RB0 )
    SHIFT_MORPH_COMBO(  lpar_lbrc,          LEFT_PARENTHESIS,    LEFT_BRACE,    RM1 RB1 )
    SHIFT_MORPH_COMBO(  rbrc_gt,            RIGHT_BRACKET,       GREATER_THAN,  RM2 RB2 )
    SHIFT_MORPH_COMBO(  rpar_rbrc,          RIGHT_PARENTHESIS,   RIGHT_BRACE,   RM3 RB3 )

/ {

    behaviours {
        num_temp: num_temp {compatible = "zmk,behavior-auto-layer"; #binding-cells = <1>; continue-list = <LEFT DOWN UP RIGHT PG_DN PG_UP>; ignore-modifiers; };
        scroll_encoder: scroll_encoder {compatible = "zmk,behavior-sensor-rotate"; #sensor-binding-cells = <0>; bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>; };
        volume_encoder: volume_encoder {compatible = "zmk,behavior-sensor-rotate"; #sensor-binding-cells = <0>; bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>; };
        rgb_br_encoder: rgb_br_encoder {compatible = "zmk,behavior-sensor-rotate"; #sensor-binding-cells = <0>; bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_BRI>; };
        zoom_encoder: zoom_encoder {compatible = "zmk,behavior-sensor-rotate"; #sensor-binding-cells = <0>; bindings = <&kp LC(MINUS)>, <&kp LC(PLUS)>; };
    };

    keymap { compatible = "zmk,keymap";

        DEFAULT { sensor-bindings = <&volume_encoder>; display-name = "DEFAULT"; bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &trans     &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp PSCRN     &kp B         &kp Y         &kp O         &kp U         &kp Q         &trans     &kp J         &kp L         &kp U         &kp O         &kp B         &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &hml LGUI C   &hml LCTL I   &hml LALT E   &hml LSFT A   &kp Z         &trans     &kp K         &hmr RSFT A   &hmr RALT E   &hmr RCTL I   &hmr RGUI C   &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &slash_back   &minus_undr   &comma_astr   &dot_         &del_bspc     &trans     &kp X         &kp M         &kp G         &kp P         &kp F         &trans
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
    &kp C_MUTE    &trans        &trans        &trans        SPC_NAV_SYS   RUN_NAV_APP   &trans     RUN_SFT       R_NAV_TXT     &trans        &trans        &trans
//              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯          ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
        >;};

        NAV_TXT { sensor-bindings = <&volume_encoder>; display-name = "NAV_TXT"; bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans        &trans        &trans        &trans        &trans        &trans        &trans     &trans        &trans        &trans        &trans        &trans        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp N4        &kp N5        &kp N6        &kp N7        &kp N8        &trans     &trans        &kp PG_UP      &kp UP       &kp PG_DN     &trans        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp N3        &kp N2        &kp N1        &kp N0        &kp N9        &trans     &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT     &kp END        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &trans        &trans        &trans        &trans        &trans        &trans     &trans        &trans        &trans        &trans        &trans
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
    &trans        &trans        &trans        &trans        &trans        &trans        &trans     &trans        &trans        &trans        &trans        &trans
//              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯          ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
        >;};

        NAV_APP { sensor-bindings = <&volume_encoder>; display-name = "NAV_APP"; bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮        ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp LC(N4)    &kp LC(N5)    &kp LC(N6)    &kp LC(N7)    &kp LC(N8)    &trans   &trans        &kp PG_UP     &kp UP        &kp PG_DN     &trans        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp LC(N3)    &kp LC(N2)    &kp LC(N1)    &kp LC(TAB)   &kp LC(N9)    &trans   &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT     &kp END       &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
    &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans
//              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯        ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
        >;};

        NAV_SYS { sensor-bindings = <&volume_encoder>; display-name = "NAV_SYS"; bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮        ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp LG(N4)    &kp LG(N5)    &kp LG(N6)    &kp LG(N7)    &kp LG(N8)    &trans   &trans        &kp PG_UP     &kp UP        &kp PG_DN     &trans        &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp LG(N3)    &kp LG(N2)    &kp LG(N1)    &kp LG(TAB)   &kp LG(N9)    &trans   &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT     &kp END       &trans
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &trans        &kp LC(C)     &kp LC(X)     &kp LC(V)     &kp LC(Z)     &kp LC(Y)     &trans   &trans        &trans        &trans        &trans        &trans
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
    &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans
//             ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯        ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
        >;};

//         OPTIONS { sensor-bindings = <&volume_encoder>; display-name = "OPTIONS"; bindings = <
// //╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮        ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//     &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans        &trans
// //├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//     &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans        &trans
// //├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//     &trans        &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &sys_reset    &trans   &sys_reset    &trans        &trans        &trans        &trans        &trans
// //├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//     &trans        &trans        &trans        &out OUT_USB  &out OUT_BLE  &bootloader   &trans   &bootloader   &trans        &trans        &trans        &trans
// //╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤        ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//     &trans        &trans        &trans        &trans        &trans        &trans        &trans   &trans        &trans        &trans        &trans        &trans
// //             ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯        ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
//         >;};
    };
};