/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// Layer Definitions
#define ALP 0  // Alpha (Base)
#define SPE 1  // Special Characters
#define SYM 2  // Symbols
#define NAV 3  // Text Navigation
#define SYS 4  // System Controls
#define SNAV 5 // System Navigation (with GUI)
#define MOU 6  // Mouse Control
#define QWE 7  // Qwerty (Gaming)

// --- Behaviors ---
/ {
    behaviors {
        // Home Row Mods Left Hand (I=Ctrl, E=Alt, A=Shift)
        hm_lctl_i: hm_lctl_i { compatible = "zmk,behavior-hold-tap"; label = "HM_LCTL_I"; #binding-cells = <2>; tapping-term-ms = <220>; quick-tap-ms = <0>; flavor = "tap-preferred"; bindings = <&kp LCTRL>, <&kp I>; };
        hm_lalt_e: hm_lalt_e { compatible = "zmk,behavior-hold-tap"; label = "HM_LALT_E"; #binding-cells = <2>; tapping-term-ms = <220>; quick-tap-ms = <0>; flavor = "tap-preferred"; bindings = <&kp LALT>, <&kp E>; };
        hm_lsft_a: hm_lsft_a { compatible = "zmk,behavior-hold-tap"; label = "HM_LSFT_A"; #binding-cells = <2>; tapping-term-ms = <220>; quick-tap-ms = <0>; flavor = "tap-preferred"; bindings = <&kp LSHFT>, <&kp A>; };

        // Home Row Mods Right Hand (N=Ctrl, T=Alt, H=Shift)
        hm_rctl_n: hm_rctl_n { compatible = "zmk,behavior-hold-tap"; label = "HM_RCTL_N"; #binding-cells = <2>; tapping-term-ms = <220>; quick-tap-ms = <0>; flavor = "tap-preferred"; bindings = <&kp RCTRL>, <&kp N>; };
        hm_ralt_t: hm_ralt_t { compatible = "zmk,behavior-hold-tap"; label = "HM_RALT_T"; #binding-cells = <2>; tapping-term-ms = <220>; quick-tap-ms = <0>; flavor = "tap-preferred"; bindings = <&kp RALT>, <&kp T>; };
        hm_rsft_h: hm_rsft_h { compatible = "zmk,behavior-hold-tap"; label = "HM_RSFT_H"; #binding-cells = <2>; tapping-term-ms = <220>; quick-tap-ms = <0>; flavor = "tap-preferred"; bindings = <&kp RSHFT>, <&kp H>; };

        // Layer Tap Behaviors (Tap action, Hold action)
        // Left Thumbs
        lt_snav_tab: lt_snav_tab { compatible = "zmk,behavior-hold-tap"; label = "LT_SNAV_TAB"; #binding-cells = <2>; tapping-term-ms = <200>; flavor = "hold-preferred"; bindings = <&mo SNAV>, <&kp TAB>; };
        lt_sys_sqt:  lt_sys_sqt  { compatible = "zmk,behavior-hold-tap"; label = "LT_SYS_SQT";  #binding-cells = <2>; tapping-term-ms = <200>; flavor = "hold-preferred"; bindings = <&mo SYS>,  <&kp SQT>; };
        lt_mou_ent:  lt_mou_ent  { compatible = "zmk,behavior-hold-tap"; label = "LT_MOU_ENT";  #binding-cells = <2>; tapping-term-ms = <200>; flavor = "hold-preferred"; bindings = <&mo MOU>,  <&kp ENTER>; };
        // Right Thumbs
        lt_spe_esc:  lt_spe_esc  { compatible = "zmk,behavior-hold-tap"; label = "LT_SPE_ESC";  #binding-cells = <2>; tapping-term-ms = <200>; flavor = "hold-preferred"; bindings = <&mo SPE>,  <&kp ESCAPE>; };
        lt_sym_r:    lt_sym_r    { compatible = "zmk,behavior-hold-tap"; label = "LT_SYM_R";    #binding-cells = <2>; tapping-term-ms = <200>; flavor = "hold-preferred"; bindings = <&mo SYM>,  <&kp R>; };
        lt_nav_under:lt_nav_under{ compatible = "zmk,behavior-hold-tap"; label = "LT_NAV_UNDER";#binding-cells = <2>; tapping-term-ms = <200>; flavor = "hold-preferred"; bindings = <&mo NAV>,  <&kp UNDER>; }; // User table had _ for TNav

        // Sensor Binding Behaviors (to be referenced by sensor-bindings in layers)
        // IMPORTANT: The order of behaviors in a layer's `sensor-bindings` property MUST match
        // the order of sensors in your board's DTS file (e.g., chosen { zmk,sensors = <&left_encoder &right_joy_x &right_joy_y>; })

        // Alpha Layer Sensors
        alpha_encoder_bindings_behavior: alpha_encoder_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "ALPHA_ENCODER_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>, <&kp C_MUTE>; };
        alpha_joy_x_bindings_behavior: alpha_joy_x_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "ALPHA_JOY_X_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&kp RIGHT>, <&kp LEFT>; };
        alpha_joy_y_bindings_behavior: alpha_joy_y_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "ALPHA_JOY_Y_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&kp DOWN>, <&kp UP>; };

        // System Layer Sensors
        system_encoder_bindings_behavior: system_encoder_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "SYSTEM_ENCODER_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&rgb_ug RGB_BRI_INC>, <&rgb_ug RGB_BRI_DEC>, <&rgb_ug RGB_TOG>; };
        system_joy_x_bindings_behavior: system_joy_x_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "SYSTEM_JOY_X_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&rgb_ug RGB_EFF_INC>, <&rgb_ug RGB_EFF_DEC>; };
        system_joy_y_bindings_behavior: system_joy_y_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "SYSTEM_JOY_Y_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&rgb_ug RGB_SPD_INC>, <&rgb_ug RGB_SPD_DEC>; };

        // Mouse Layer Sensors
        mouse_encoder_bindings_behavior: mouse_encoder_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "MOUSE_ENCODER_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&kp MWH_UP>, <&kp MWH_DOWN>, <&mkp MB3>; };
        mouse_joy_x_bindings_behavior: mouse_joy_x_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "MOUSE_JOY_X_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&mmv RIGHT>, <&mmv LEFT>; };
        mouse_joy_y_bindings_behavior: mouse_joy_y_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "MOUSE_JOY_Y_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&mmv DOWN>, <&mmv UP>; };
   
        // SNAV Layer Sensors (Encoder for mouse wheel, joystick axes are &none for global mouse passthrough)
        snav_encoder_bindings_behavior: snav_encoder_bindings_behavior { compatible = "zmk,behavior-sensor-rotate-key-press"; label = "SNAV_ENCODER_BEHAVIOR"; #sensor-binding-cells = <0>; bindings = <&kp MWH_UP>, <&kp MWH_DOWN>; };
        // No specific behavior nodes needed for &none joystick bindings on SNAV
    };


    macros {
        rst_macro: rst_macro { compatible = "zmk,behavior-macro"; label = "RST_MACRO"; #binding-cells = <0>; bindings = <&sys_reset>; };
        boot_macro: boot_macro { compatible = "zmk,behavior-macro"; label = "BOOT_MACRO"; #binding-cells = <0>; bindings = <&bootloader>; };
    };

    keymap {
        compatible = "zmk,keymap";

        // Layer: Alpha (ALP)
        alpha_layer {
            label = "Alpha";
            // Assumed sensor order: Left Encoder, Right Joy X, Right Joy Y
            sensor-bindings = <&alpha_encoder_bindings_behavior &alpha_joy_x_bindings_behavior &alpha_joy_y_bindings_behavior>;
            bindings = <
            // Left Hand (6 keys)                                                               // Right Hand (6 keys)
            &trans,         &trans,         &kp AT,         &kp DEL,        &kp PRSCRN,     &trans,         &trans,         &kp TILDE,      &trans,         &trans,         &trans,         &trans
            &kp AMPS,       &kp B,          &kp Y,          &kp O,          &kp U,          &kp BSPC,        &kp X,          &kp L,          &kp D,          &kp W,          &kp V,          &kp Z
            &kp QMARK,      &kp C,          &hm_lctl_i,     &hm_lalt_e,     &hm_lsft_a,     &kp MINUS,       &kp K,          &hm_rsft_h,     &hm_ralt_t,     &hm_rctl_n,     &kp S,          &kp EXCL
            &kp SEMI,       &kp COMMA,      &kp COLON,      &kp SLASH,      &kp DOT,        &kp DQT,         &kp J,          &kp M,          &kp G,          &kp P,          &kp F,          &kp Q
            // Thumb row (5 keys per hand)
            // Left Hand Thumbs (Innermost to Outermost):
            &lt_snav_tab,   &lt_sys_sqt,    &kp SPACE,      &lt_mou_ent,    &mo MOU,  // mo MOU from *-->*
            // Right Hand Thumbs (Innermost to Outermost):
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &to QWE,        &mo ALP   // mo ALP from *<--*
            >;
        };

        // Layer: Special Characters (SPE)
        special_layer {
            label = "Special";
            sensor-bindings = <&alpha_encoder_bindings_behavior &alpha_joy_x_bindings_behavior &alpha_joy_y_bindings_behavior>; // Inherit Alpha sensors
            bindings = <
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            &trans,         &trans,         &hm_lctl_i,     &hm_lalt_e,     &hm_lsft_a,     &trans,         &trans,         &hm_rsft_h,     &hm_ralt_t,     &hm_rctl_n,     &trans,         &trans
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            // Thumb row
            &lt_snav_tab,   &lt_sys_sqt,    &kp TRNS,       &lt_mou_ent,    &mo MOU,
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &to QWE,        &mo ALP
            >;
        };

        // Layer: Symbols (SYM)
        symbols_layer {
            label = "Symbols";
            sensor-bindings = <&alpha_encoder_bindings_behavior &alpha_joy_x_bindings_behavior &alpha_joy_y_bindings_behavior>; // Inherit
            bindings = <
            &trans,         &trans,         &trans,         &kp CARET,      &kp DEL,        &kp PRSCRN,     &trans,         &kp TILDE,      &trans,         &trans,         &trans,         &trans
            &kp AMPS,       &kp PIPE,       &kp LPAR,       &kp LBRC,       &kp RPAR,       &kp BSPC,        &kp GT,         &kp GRAVE,      &kp STAR,       &kp N8,         &kp N9,         &trans
            &kp QMARK,      &kp PRCNT,      &kp LBKT,       &kp RBRC,       &kp RBKT,       &kp MINUS,       &kp PLUS,       &kp EQUAL,      &kp N0,         &kp N1,         &kp N2,         &kp EXCL
            &kp SEMI,       &kp COMMA,      &kp COLON,      &kp SLASH,      &kp DOT,        &kp DQT,         &kp LT,         &kp N3,         &kp N4,         &kp N5,         &kp N6,         &kp N7
            // Thumb row
            &kp BSLH,       &kp TRNS,       &kp DLLR,       &kp TRNS,       &mo MOU, // Left: BSLH (from SNav(Tab) in user table), TRNS, DLLR (from Spc in user table), TRNS, MOU
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &to QWE,        &mo ALP  // Right: Standard
            >;
        };

        // Layer: Text Navigation (NAV)
        text_nav_layer {
            label = "Navigation";
            sensor-bindings = <&alpha_encoder_bindings_behavior &alpha_joy_x_bindings_behavior &alpha_joy_y_bindings_behavior>; // Inherit
            bindings = <
            &trans,         &trans,         &trans,         &kp PG_UP,      &kp DEL,        &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            &trans,         &trans,         &trans,         &kp UP,         &trans,         &kp BSPC,        &trans,         &trans,         &trans,         &kp N8,         &kp N9,         &trans
            &trans,         &kp HOME,       &kp LEFT,       &kp DOWN,       &kp RIGHT,      &kp END,         &trans,         &trans,         &kp N0,         &kp N1,         &kp N2,         &trans
            &trans,         &trans,         &trans,         &kp PG_DN,      &trans,         &trans,         &trans,         &kp N3,         &kp N4,         &kp N5,         &kp N6,         &kp N7
            // Thumb row
            &lt_snav_tab,   &lt_sys_sqt,    &kp TRNS,       &lt_mou_ent,    &mo MOU,
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &to QWE,        &mo ALP
            >;
        };

        // Layer: System Controls (SYS)
        system_layer {
            label = "System";
            sensor-bindings = <&system_encoder_bindings_behavior &system_joy_x_bindings_behavior &system_joy_y_bindings_behavior>; 
            bindings = <
            &trans,         &trans,         &trans,         &trans,         &bt BT_CLR,     &bt BT_CLR_ALL, &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            &trans,         &bt BT_SEL 0,   &bt BT_SEL 1,   &bt BT_SEL 2,   &bt BT_SEL 3,   &bt BT_SEL 4,   &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            &trans,         &out OUT_USB,   &out OUT_BLE,   &trans,         &rst_macro,     &boot_macro,    &boot_macro,    &rst_macro,     &trans,         &trans,         &trans,         &trans
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            // Thumb row
            &lt_snav_tab,   &lt_sys_sqt,    &kp TRNS,       &lt_mou_ent,    &mo MOU,
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &rgb_ug RGB_RST,&mo ALP // Joystick Click (mapped to 4th right thumb): RGB Reset
            >;
        };

        // Layer: System Navigation (SNAV) - GUI active
        system_nav_layer {
            label = "System Nav";
            // Encoder: LGUI+Scroll. Joystick: LGUI+Mouse (axes are &none for global mouse passthrough)
            sensor-bindings = <&snav_encoder_bindings_behavior &none &none>;
            bindings = <
            &kp LG(TRNS),   &kp LG(TRNS),   &kp LG(AT),     &kp LG(DEL),    &kp LG(PRSCRN), &kp LG(TRNS),   &kp LG(TRNS),   &kp LG(TILDE),  &kp LG(TRNS),   &kp LG(TRNS),   &kp LG(TRNS),   &kp LG(TRNS)
            &kp LG(AMPS),   &kp LG(B),      &kp LG(Y),      &kp LG(O),      &kp LG(U),      &kp LG(BSPC),    &kp LG(X),      &kp LG(L),      &kp LG(D),      &kp LG(W),      &kp LG(V),      &kp LG(Z)
            &kp LG(QMARK),  &kp LG(C),      &kp LG(I),      &kp LG(E),      &kp LG(A),      &kp LG(MINUS),   &kp LG(K),      &kp LG(H),      &kp LG(T),      &kp LG(N),      &kp LG(S),      &kp LG(EXCL)
            &kp LG(SEMI),   &kp LG(COMMA),  &kp LG(COLON),  &kp LG(SLASH),  &kp LG(DOT),    &kp LG(DQT),     &kp LG(J),      &kp LG(M),      &kp LG(G),      &kp LG(P),      &kp LG(F),      &kp LG(Q)
            // Thumb row
            &lt_snav_tab,   &lt_sys_sqt,    &kp LG(SPACE),  &lt_mou_ent,    &mo MOU,
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &mkp MB3,       &mo ALP // Joystick Click (mapped to 4th right thumb): LGUI + MB3
            >;
        };

        // Layer: Mouse Control (MOU)
        mouse_layer {
            label = "Mouse";
            sensor-bindings = <&mouse_encoder_bindings_behavior &mouse_joy_x_bindings_behavior &mouse_joy_y_bindings_behavior>;
            bindings = <
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &mkp MB3,       &trans,         &trans,         &trans
            &trans,         &trans,         &hm_lctl_i,     &hm_lalt_e,     &hm_lsft_a,     &trans,         &trans,         &mkp MB1,       &mkp MB2,       &mkp MB4,       &mkp MB5,       &trans
            &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans,         &trans
            // Thumb row
            &trans,         &lt_sys_sqt,    &lt_snav_tab,   &kp TRNS,       &lt_mou_ent,    &mo MOU,
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &mkp MB3,       &mo ALP // Joystick Click (mapped to 4th right thumb): MB3
            >;
        };

        // Layer: Qwerty (QWE) - No home row mods from Alpha layer
        qwerty_layer {
            label = "Qwerty";
            sensor-bindings = <&alpha_encoder_bindings_behavior &alpha_joy_x_bindings_behavior &alpha_joy_y_bindings_behavior>; // Inherit Alpha sensors
            bindings = <
            &kp MINUS,      &kp PLUS,       &kp N1,         &kp N2,         &kp N3,         &kp N4,         &kp N5,         &kp N6,         &kp N7,         &kp N8,         &kp N9,         &kp TILDE
            &kp RBRC,       &kp LSHFT,      &kp Q,          &kp W,          &kp E,          &kp R,          &kp T,          &kp Y,          &kp U,          &kp I,          &kp O,          &kp P
            &kp LBRC,       &kp LCTRL,      &kp A,          &kp S,          &kp D,          &kp F,          &kp G,          &kp H,          &kp J,          &kp K,          &kp L,          &kp SEMI
            &kp DQT,        &kp LALT,       &kp Z,          &kp X,          &kp C,          &kp V,          &kp B,          &kp N,          &kp M,          &kp COMMA,      &kp DOT,        &kp SLASH
            // Thumb row
            &lt_snav_tab,   &lt_sys_sqt,    &kp SPACE,      &lt_mou_ent,    &mo MOU,
            &lt_spe_esc,    &lt_sym_r,      &lt_nav_under,  &to ALP,        &mo ALP // Joystick Click (mapped to 4th right thumb): to Alpha
            >;
        };
    };
};
